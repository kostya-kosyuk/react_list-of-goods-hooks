{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","goodA","goodB","ALPABET","localeCompare","LENGTH","length","reverse","App","useState","NONE","setSortType","setIsReversed","className","type","classNames","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAgB,WAC3B,MAAgCC,mBAAShB,EAASiB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBc,EAAnB,KA2BA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACAlB,IAAaJ,EAASU,SAAW,YAEnCa,QAlCoB,WACtBnB,IAAaJ,EAASU,QACxBQ,EAAYlB,EAASU,SAErBQ,EAAYlB,EAASiB,OAwBnB,iCAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACAlB,IAAaJ,EAASY,QAAU,YAElCW,QArCmB,WACrBnB,IAAaJ,EAASY,OACxBM,EAAYlB,EAASY,QAErBM,EAAYlB,EAASiB,OA2BnB,4BAWA,wBACEI,KAAK,SACLD,UAAWE,IACT,qBACCjB,GAAc,YAEjBkB,QAxCc,WACpBJ,GAAc,SAAAK,GAAO,OAAKA,MAiCtB,sBAYgB,IAAbpB,GAAkBC,IAEjB,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QA/CQ,WAClBL,EAAYlB,EAASiB,MACrBE,GAAc,IA0CN,sBAWN,6BACE,6BACGjB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAACC,GAAD,OAAW,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCtIpDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf605744.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB): number => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodA.localeCompare(goodB);\n\n      case SortType.LENGTH:\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleSortByAlpabet = () => {\n    if (sortType !== SortType.ALPABET) {\n      setSortType(SortType.ALPABET);\n    } else {\n      setSortType(SortType.NONE);\n    }\n  };\n\n  const handleSortByLength = () => {\n    if (sortType !== SortType.LENGTH) {\n      setSortType(SortType.LENGTH);\n    } else {\n      setSortType(SortType.NONE);\n    }\n  };\n\n  const handleReverse = () => {\n    setIsReversed(current => !current);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            sortType !== SortType.ALPABET && 'is-light',\n          )}\n          onClick={handleSortByAlpabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            sortType !== SortType.LENGTH && 'is-light',\n          )}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            !isReversed && 'is-light',\n          )}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortType !== 0 || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map((good) => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}